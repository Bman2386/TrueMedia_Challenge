{"version":3,"sources":["util/keys.js","util/getData.js","components/App.js","index.js"],"names":["token","a","url","fetch","method","headers","response","json","QBData","id","console","log","data","App","useState","setData","stats0","setStats0","stats1","setStats1","stats2","setStats2","qb1","setQb1","qb2","setQb2","winner","setWinner","useEffect","getQBs","then","res","viewStats","qbId","idx","getStats","statDisplay","stats","total","forEach","game","Att","Cmp","Sack","Int","PsYds","PsTD","RshTD","games","qbRating","rating","className","Rush","RshYds","completionAvg","yardsPerAttempt","touchDownPercent","interceptionPercent","Math","round","findQBStats","currId","parseInt","found","i","playerId","finalScore","qb","avgTD","totalTD","totalGames","avgInt","totalInt","avgYds","totalYds","onChange","e","target","value","fullName","onClick","qb1RawStats","qb2RawStats","qb1Score","qb2Score","qb1FinalScore","qb2FinalScore","determineWinner","map","currentStats","src","playerImage","alt","teamImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d281701.chunk.js","sourcesContent":["\r\nconst token = '097046ec-0cae-4b45-8ea2-2202b9899e40'\r\n\r\nexport default token","import token from './keys.js'\r\n\r\n\r\n// async function getQBs(url = 'https://project.trumedianetworks.com/api/nfl/players') {\r\n//     // Default options are marked with *\r\n//     const response = await fetch(url, {\r\n//         method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n//         mode: 'no-cors', // no-cors, *cors, same-origin\r\n//         //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n//         //credentials: `omit`, // include, *same-origin, omit\r\n//         headers: {\r\n//             'Content-Type': 'application/json',\r\n//             'temptoken': `${token}`\r\n//             // 'Content-Type': 'application/x-www-form-urlencoded',\r\n//         },\r\n//         //redirect: 'follow', // manual, *follow, error\r\n//         //referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n//         //body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n//     });\r\n//     console.log(response.json())\r\n//     // return response.json(); // parses JSON response into native JavaScript objects\r\n// }\r\n\r\nexport async function getQBs(url = `https://project.trumedianetworks.com/api/nfl/players`){\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'temptoken': `${token}`\r\n        }\r\n    })\r\n    const QBData = await response.json()\r\n    return QBData\r\n}\r\n\r\nexport async function getStats(id){\r\n   const url = `https://project.trumedianetworks.com/api/nfl/player/${id}`\r\n    console.log(url)\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'temptoken': `${token}`\r\n        }\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport {getQBs, getStats} from '../util/getData.js'\n\nimport '../css/App.css';\n\nfunction App() {\n  const [data, setData] = useState(null)\n  const [stats0, setStats0] = useState(null)\n  const [stats1, setStats1] = useState(null)\n  const [stats2, setStats2] = useState(null)\n  const [qb1, setQb1] = useState(null)\n  const [qb2, setQb2] = useState(null)\n  const [winner, setWinner] = useState(null)\n\n  useEffect( () => { // Grab QB's on load\n      getQBs().then(res => {\n      setData(res)\n    })\n  }, [])\n\n  const viewStats = (qbId, idx) => {\n    getStats(qbId).then(res => {\n      switch (idx) {\n        case 0:\n           setStats0(res)\n          break;\n        case 1:\n          setStats1(res)\n          break;\n        case 2:\n          setStats2(res)\n          break;\n        default:\n          break;\n      }\n    })\n  }\n\n  const statDisplay = (stats) => {\n    const total = {\n      \"Att\": 0,\n      \"Cmp\": 0,\n      \"Sack\": 0,\n      \"Int\": 0,\n      \"PsYds\": 0,\n      \"PsTD\": 0,\n      \"Rush\": 0,\n      \"RshYds\": 0,\n      \"RshTD\": 0,\n      \"games\": 0\n    }\n    stats.forEach(game => {\n      total.Att += game.Att\n      total.Cmp += game.Cmp\n      total.Sack += game.Sack\n      total.Int += game.Int\n      total.PsYds += game.PsYds\n      total.PsTD = game.PsTD\n      total.RshTD += game.RshTD\n      total.games += 1\n    })\n    let qbRating = rating(total)\n    total['rating'] = qbRating\n    return (\n      <ul>\n        <li className='rating'>Rating: {total.rating}</li>\n        <li>Attemps: {total.Att}</li>\n        <li>Completions: {total.Cmp}</li>\n        <li>Interceptions: {total.Int}</li>\n        <li>PassYds: {total.PsYds}</li>\n        <li>PassTDs: {total.PsTD}</li>\n        <li>Rush: {total.Rush}</li>\n        <li>Rushing Yds: {total.RshYds}</li>\n        <li>RushingTD: {total.RshTD}</li>\n      </ul>\n    )\n\n  }\n\n  const rating = (total) => {\n    let completionAvg = (total.Cmp/total.Att)*100\n    completionAvg -= 30\n    completionAvg *= .05\n    let yardsPerAttempt = total.PsYds/total.Cmp\n    yardsPerAttempt -= 3\n    yardsPerAttempt *= .25\n    let touchDownPercent = (total.PsTD/total.game) * .2\n    if (!touchDownPercent) touchDownPercent = 0\n    let interceptionPercent = (total.Int/total.Att) * 100\n    if (!interceptionPercent) interceptionPercent = 0\n    interceptionPercent *= .25\n    interceptionPercent = 2.375 - interceptionPercent\n    let qbRating = (completionAvg + yardsPerAttempt + touchDownPercent + interceptionPercent)/6\n    qbRating *= 100\n    return Math.round(qbRating*10)/10\n    \n  }\n  const displayRaw = () => {\n    return data.map((qb, idx) => {\n      let currentStats \n      if (idx === 0) currentStats = stats0\n      if (idx === 1) currentStats = stats1\n      if (idx === 2) currentStats = stats2\n      return (\n        <div key={idx}className='qb'>\n        <p className='name'>{`${qb.fullName}`} <img  className='qbImage' src={qb.playerImage} alt={qb.fullName}></img></p>\n        <img src={qb.teamImage} alt='team' className='team'></img>\n        {currentStats ? <div>{statDisplay(currentStats)}</div> : <button className='statsButton' onClick={()=> viewStats(qb.playerId, idx)}>View Stats</button>}\n      </div>\n      )})\n  }\n\n  const findQBStats = (id) => {\n    const currId = parseInt(id)\n    let found = false\n    let i = 0\n    while(!found){\n      if (currId === data[i].playerId){\n        found = true\n      } else {\n        i++\n      }\n    }\n    if (i === 0) found = stats0\n    if (i === 1) found = stats1\n    if (i === 2) found = stats2\n    return found\n  }\n  const finalScore=(qb) => {\n    let avgTD = qb.totalTD/qb.totalGames\n    if (!avgTD) avgTD = 0\n    let avgInt = qb.totalInt/qb.totalGames\n    if (!avgInt) avgInt = 0\n    let avgYds = qb.totalYds/qb.totalGames\n     avgYds /= 100\n    return avgTD + avgYds - (avgInt*2)\n  }\n  const determineWinner =  () => {\n\n    const qb1RawStats = findQBStats(qb1)\n    const qb2RawStats = findQBStats(qb2)\n    const qb1Score = {\n      totalTD: 0,\n      totalInt: 0,\n      totalYds: 0,\n      totalGames: 0\n    }\n    const qb2Score = {\n      totalTD: 0,\n      totalInt: 0,\n      totalYds: 0,\n      totalGames: 0\n    }\n    qb1RawStats.forEach(game => {\n      if (!qb1Score.fullName) qb1Score['fullName'] = game.fullName\n      qb1Score.totalTD += game.PsTD + game.RshTD\n      qb1Score.totalInt += game.Int\n      qb1Score.totalYds += game.PsYds + game.RshYds\n      qb1Score.totalGames += 1\n    })\n    qb2RawStats.forEach(game => {\n      if (!qb2Score.fullName) qb2Score['fullName'] = game.fullName\n      qb2Score.totalTD += game.PsTD + game.RshTD\n      qb2Score.totalInt += game.Int\n      qb2Score.totalYds += game.PsYds + game.RshYds\n      qb2Score.totalGames += 1\n    })\n    const qb1FinalScore = finalScore(qb1Score)\n    const qb2FinalScore = finalScore(qb2Score)\n\n    if (qb1FinalScore > qb2FinalScore) setWinner(qb1Score.fullName)\n    if (qb2FinalScore > qb1FinalScore) setWinner(qb2Score.fullName)\n    if (qb1FinalScore === qb2FinalScore) setWinner('Tie')\n  }\n  return (\n    <div className=\"App\">\n      <img></img>\n      <h1 className='header'>NFL Quarterbacks</h1>\n      {data? \n      <div className='body'>\n      { stats0&&stats1&&stats2 ?\n         <div className='compare'>\n      \n      <select onChange={(e) => setQb1(e.target.value)} value={qb1}>\n        <option value=\"\">Select a QB</option>\n        <option value={data[0].playerId}>{data[0].fullName}</option>\n        <option value={data[1].playerId}>{data[1].fullName}</option>\n        <option value={data[2].playerId}>{data[2].fullName}</option>\n      </select>\n      <label> Vs. </label>\n      <select onChange={(e) => setQb2(e.target.value)} value={qb2}>\n        <option value=\"\">Select a QB</option>\n        <option value={data[0].playerId}>{data[0].fullName}</option>\n        <option value={data[1].playerId}>{data[1].fullName}</option>\n        <option value={data[2].playerId}>{data[2].fullName}</option>\n      </select>\n      {qb1 && qb2 ? <button onClick={() => determineWinner()}>Head to Head</button>: ''}\n      {winner&&qb1&&qb2 ? <p className='winner'>Winner: {`${winner}`}</p>:''}\n        </div>\n       : ''}\n          <div className='qbContainer'>\n            {displayRaw()}\n          </div>\n      </div> : <p className='header'>Grabbing Data</p>} \n      \n    </div>\n  );\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}